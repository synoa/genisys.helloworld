<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>de.synoa.genisys</groupId>
    <artifactId>helloworld</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>helloworld</name>

    <url>https://synoa.de/</url>

    <properties>
        <maven.compiler.plugin.version>3.7.0</maven.compiler.plugin.version>
        <spotify.dockerfile.plugin.version>1.3.6</spotify.dockerfile.plugin.version>
        <spring.boot.version>1.5.7.RELEASE</spring.boot.version>
        <camel.version>2.20.0</camel.version>
        <git.commit.id.version>2.2.1</git.commit.id.version>
        <mongobee.version>0.13</mongobee.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Manage Spring-Boot and Camel -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-dependencies</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-parent</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Spring-boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <!-- Comment this if you need an embedded Tomcat -->
            <artifactId>spring-boot-starter</artifactId>
            <!-- Uncomment this if you need an embedded Tomcat -->
            <!-- <artifactId>spring-boot-starter-web</artifactId> -->
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>

        <!-- Dependencies for Tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Allows the routes to be run via 'mvn spring-boot:run' -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${project.artifactId}</finalName>
                    <mainClass>de.synoa.genisys.helloworld.App</mainClass>
                    <!-- Uncomment if you want to replace the application.properties -->
                    <!-- You also have to update the Dockerfile if you add your own *.properties -->
                    <!--<arguments>&#45;&#45;spring.config.location=${basedir}/development.properties</arguments>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git.commit.id.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.directory}/git.properties</generateGitPropertiesFilename>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.commit.id$</includeOnlyProperty>
                        <includeOnlyProperty>^git.build.version$</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
